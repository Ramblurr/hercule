{"version":3,"sources":["../../src/grammar/index.js"],"names":[],"mappings":";;AAAA;;;;AACA;;;;;;AAEA,IAAI,oBAAJ;AACA,IAAI,0BAAJ;;AAEA,IAAI;AACF,gBAAc,QAAQ,gBAAR,CAAd,C;AACA,sBAAoB,QAAQ,qBAAR,CAApB,C;AACD,CAHD,CAGE,OAAO,EAAP,EAAW;;AAEX,MAAM,MAAM,QAAQ,OAAR,CAAZ,C;AACA,gBAAc,IAAI,WAAJ,CAAgB,aAAG,YAAH,CAAgB,eAAK,IAAL,CAAU,SAAV,EAAqB,oBAArB,CAAhB,EAA4D,MAA5D,CAAhB,CAAd;AACA,sBAAoB,IAAI,WAAJ,CAAgB,aAAG,YAAH,CAAgB,eAAK,IAAL,CAAU,SAAV,EAAqB,yBAArB,CAAhB,EAAiE,MAAjE,CAAhB,CAApB;AACD;;AAED,OAAO,OAAP,GAAiB;AACf,0BADe;AAEf;AAFe,CAAjB","file":"index.js","sourcesContent":["import fs from 'fs';\nimport path from 'path';\n\nlet linkGrammar;\nlet transcludeGrammar;\n\ntry {\n  linkGrammar = require('./inflate-link'); // eslint-disable-line\n  transcludeGrammar = require('./transclusion-link'); // eslint-disable-line\n} catch (ex) {\n  // Permits using compiling grammar when using ES2015 source\n  const peg = require('pegjs'); // eslint-disable-line\n  linkGrammar = peg.buildParser(fs.readFileSync(path.join(__dirname, 'inflate-link.pegjs'), 'utf8'));\n  transcludeGrammar = peg.buildParser(fs.readFileSync(path.join(__dirname, 'transclusion-link.pegjs'), 'utf8'));\n}\n\nmodule.exports = {\n  linkGrammar,\n  transcludeGrammar,\n};\n"]}