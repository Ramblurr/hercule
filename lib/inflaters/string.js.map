{"version":3,"sources":["../../src/inflaters/string.js"],"names":[],"mappings":";;;;;kBAgBwB,O;;AAhBxB;;;;;;;;;;;;;;;;AAgBe,SAAS,OAAT,CAAiB,KAAjB,EAAwB,MAAxB,EAAgC,IAAhC,EAAsC,MAAtC,EAA8C;AAC3D,MAAM,eAAe,qBAAa,EAAE,YAAY,IAAd,EAAb,CAArB;;;AAGA,MAAM,UAAU,MAAM,KAAN,CAAY,CAAZ,EAAe,CAAC,CAAhB,CAAhB;AACA,MAAM,iBAAiB,SAAS,CAAhC,C;;AAEA,eAAa,IAAb,CAAkB,EAAE,gBAAF,EAAW,cAAX,EAAmB,UAAnB,EAAyB,QAAQ,cAAjC,EAAlB;AACA,eAAa,IAAb,CAAkB,IAAlB;AACA,SAAO,YAAP;AACD","file":"string.js","sourcesContent":["import { Readable } from 'stream';\n\n/**\n * inflate() returns a readable stream, which will provide exactly one object.\n * String transclusion is trigered by strings inside the transclusion link, and cannot contain links themselves.\n *\n * Examples:\n *   :[fallback example](foo.md || \"bar\")\n *   :[reference example](foo.md bar:\"bar\")\n *\n * @param {string} input - Quoted string which will be inserted into the generated output\n * @param {string} source - Source document containing the input string\n * @param {number} line - Location of the of input in the source file\n * @param {number} column - Location of the of input in the source file\n * @return {Object} stringStream - Readable stream object\n */\nexport default function inflate(input, source, line, column) {\n  const stringStream = new Readable({ objectMode: true });\n\n  // Strings provided by fallback or reference are quoted\n  const content = input.slice(1, -1);\n  const adjustedColumn = column + 1; // compensate for removed leading quote\n\n  stringStream.push({ content, source, line, column: adjustedColumn });\n  stringStream.push(null);\n  return stringStream;\n}\n"]}