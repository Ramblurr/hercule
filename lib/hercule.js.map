{"version":3,"sources":["../src/hercule.js"],"names":[],"mappings":"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","file":"hercule.js","sourcesContent":["import fs from 'fs';\nimport path from 'path';\nimport childProcess from 'child_process';\nimport _ from 'lodash';\n\nimport Transcluder from './transclude-stream';\n\nconst SYNC_TIMEOUT = 10000;\n\nexport { resolveLink } from './resolve';\n\nexport const TranscludeStream = Transcluder;\n\nexport function transcludeString(...args) {\n  const input = args.shift();\n  const cb = args.pop();\n  const [options = {}] = args;\n  const relativePath = _.get(options, 'relativePath');\n  const source = relativePath ? `${options.relativePath}/string` : 'string';\n\n  const transclude = new Transcluder(source, options);\n  let outputString = '';\n  let sourceMap;\n  let cbErr = null;\n\n  transclude\n    .on('readable', function read() {\n      let content = null;\n      while ((content = this.read()) !== null) {\n        outputString += content.toString('utf8');\n      }\n    })\n    .on('error', (err) => {\n      if (!cbErr) cbErr = err;\n    })\n    .on('sourcemap', (srcmap) => (sourceMap = srcmap))\n    .on('end', () => cb(cbErr, outputString, sourceMap.sources, sourceMap));\n\n  transclude.write(input, 'utf8');\n  transclude.end();\n}\n\n\nexport function transcludeFile(...args) {\n  const input = args.shift();\n  const cb = args.pop();\n  const [options = {}] = args;\n  if (!_.get(options, 'relativePath')) options.relativePath = path.dirname(input);\n\n  const transclude = new Transcluder(input, options);\n  const inputStream = fs.createReadStream(input, { encoding: 'utf8' });\n  let outputString = '';\n  let sourceMap;\n  let cbErr = null;\n\n  inputStream.on('error', (err) => cb(err));\n\n  transclude\n    .on('readable', function read() {\n      let content = null;\n      while ((content = this.read()) !== null) {\n        outputString += content;\n      }\n    })\n    .on('error', (err) => {\n      if (!cbErr) cbErr = err;\n    })\n    .on('sourcemap', (srcmap) => (sourceMap = srcmap))\n    .on('end', () => cb(cbErr, outputString, sourceMap.sources, sourceMap));\n\n  inputStream.pipe(transclude);\n}\n\n\nexport function transcludeFileSync(input, options) {\n  const syncOptions = { cwd: __dirname, timeout: SYNC_TIMEOUT };\n  const syncArgs = [input, '--reporter', 'json-err'];\n\n  _.forEach(options, (optionValue, optionName) => {\n    syncArgs.push(`--${optionName}`, `${optionValue}`);\n  });\n\n  const result = childProcess.spawnSync('../bin/hercule', syncArgs, syncOptions);\n  const outputContent = result.stdout.toString();\n  const err = result.stderr.toString();\n\n  if (err) throw new Error('Could not transclude file');\n\n  return outputContent;\n}\n\n\nexport function transcludeStringSync(input, options) {\n  const syncOptions = { input, cwd: __dirname, timeout: SYNC_TIMEOUT };\n  const syncArgs = ['--reporter', 'json-err'];\n\n  _.forEach(options, (optionValue, optionName) => {\n    syncArgs.push(`--${optionName}`, `${optionValue}`);\n  });\n\n  const result = childProcess.spawnSync('../bin/hercule', syncArgs, syncOptions);\n  const outputContent = result.stdout.toString();\n  const err = result.stderr.toString();\n\n  if (err) throw new Error('Could not transclude input');\n\n  return outputContent;\n}\n"]}